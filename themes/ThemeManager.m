% /utils/ThemeManager.m

function colors = ThemeManager(action)
    persistent currentColors;

    if nargin == 0 || strcmp(action, 'get')
        if isempty(currentColors)
            currentColors = loadThemeColors('DarkTheme.m');
        end
        colors = currentColors;
    elseif strcmp(action, 'switch')
        if strcmp(currentColors.THEME, 'DARK')
            currentColors = loadThemeColors('LightTheme.m');
        else
            currentColors = loadThemeColors('DarkTheme.m');
        end
        colors = currentColors;
    elseif strcmp(action, 'forceDark')
        currentColors = loadThemeColors('DarkTheme.m');
        colors = currentColors;
    else
        error('Azione non valida per ThemeManager: %s', action);
    end
end

function colors = loadThemeColors(filePath)
    run(filePath);
    colors = struct(...
        'THEME', THEME, ...
        'BACKGROUND_COLOR', BACKGROUND_COLOR, ...
        'FONT_MAIN_MENU_COLOR', FONT_MAIN_MENU_COLOR, ...
        'THEME_BTN_COLOR', THEME_BTN_COLOR, ...
        'HEADER_COLOR', HEADER_COLOR, ...
        'USER_COLOR', USER_COLOR, ...
        'DEVELOPER_COLOR', DEVELOPER_COLOR, ...
        'BLOCK_COLOR', BLOCK_COLOR, ...
        'USER_HEADER_COLOR', USER_HEADER_COLOR, ...
        'USER_LABEL_COLOR', USER_LABEL_COLOR, ...
        'HELP_BTN_COLOR', HELP_BTN_COLOR, ...
        'NEXT_BTN_COLOR', NEXT_BTN_COLOR, ...
        'USER_TABS_COLOR', USER_TABS_COLOR, ...
        'USER_ON_TABS_COLOR', USER_ON_TABS_COLOR, ...
        'USER_PRESSED_TABS_COLOR', USER_PRESSED_TABS_COLOR, ...
        'USER_CURRENT_TABS_COLOR', USER_CURRENT_TABS_COLOR, ...
        'USER_COMPLETED_TABS_COLOR', USER_COMPLETED_TABS_COLOR ...
    );
end
